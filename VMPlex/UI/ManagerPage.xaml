<UserControl x:Class="VMPlex.UI.ManagerPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:ui="http://schemas.modernwpf.com/2019"
      xmlns:root="clr-namespace:VMPlex"
      xmlns:local="clr-namespace:VMPlex.UI"
      xmlns:util="clr-namespace:Wpf.Util"
      mc:Ignorable="d">

    <UserControl.Resources>
        <local:VMPidConverter x:Key="VMPidConverter"/>
        <local:VMMemoryConverter x:Key="VMMemoryConverter"/>
        <local:VMCpuUsageConverter x:Key="VMCpuUsageConverter"/>
        <local:VMUptimeConverter x:Key="VMUptimeConverter"/>
        <DataTemplate x:Key="VmTemplate">
            <Button MouseDoubleClick="VmTemplate_MouseDoubleClick" Background="{DynamicResource SystemControlBackgroundAltMediumLowBrush}">
                <StackPanel Orientation="Vertical">
                    <Border BorderThickness="1" BorderBrush="{DynamicResource SystemControlPageTextBaseHighBrush}">
                        <Border.Style>
                            <Style TargetType="Border">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Source={x:Static root:UserSettings.Instance}, Path=Settings.CompactMode, UpdateSourceTrigger=PropertyChanged}"
                                                 Value="True">
                                        <Setter Property="Width" Value="160" />
                                        <Setter Property="Height" Value="120" />
                                        <Setter Property="Margin" Value="0,5,0,5" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Source={x:Static root:UserSettings.Instance}, Path=Settings.CompactMode, UpdateSourceTrigger=PropertyChanged}"
                                                 Value="False">
                                        <Setter Property="Width" Value="320" />
                                        <Setter Property="Height" Value="240" />
                                        <Setter Property="Margin" Value="5,25,5,10" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <Image Grid.Row="0" Stretch="Fill" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Source="{Binding Thumbnail}"/>
                    </Border>
                    <TextBlock Text="{Binding Name}" HorizontalAlignment="Center" FontWeight="Bold" 
                               FontSize="{Binding Source={x:Static root:UserSettings.Instance}, Path=Settings.FontSize, UpdateSourceTrigger=PropertyChanged}"/>
                    <TextBlock Text="{Binding State}" HorizontalAlignment="Center" FontWeight="Normal" 
                               FontSize="{Binding Source={x:Static root:UserSettings.Instance}, Path=Settings.FontSize, UpdateSourceTrigger=PropertyChanged}"/>
                </StackPanel>
            </Button>
        </DataTemplate>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="41"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="3"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" Background="{DynamicResource CommandBarBackground}">
            <DockPanel Grid.Column="0">
                <ui:AppBarButton x:Name="vmPower" ToolTip="Power" Click="OnPowerCommand" IsTabStop="False" IsCompact="True">
                    <ui:AppBarButton.Icon>
                        <ui:FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE7E8;"/>
                    </ui:AppBarButton.Icon>
                </ui:AppBarButton>
                <ui:AppBarButton x:Name="vmPause" Icon="Pause" ToolTip="Pause (Power On to Resume)" Click="OnPauseCommand" IsTabStop="False" IsCompact="True"/>
                <ui:AppBarButton x:Name="vmReset" ToolTip="Reset" Click="OnResetCommand" IsTabStop="False" IsCompact="True">
                    <ui:AppBarButton.Icon>
                        <ui:FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xEC58;"/>
                    </ui:AppBarButton.Icon>
                </ui:AppBarButton>
                <ui:AppBarSeparator IsCompact="True"/>
                <ui:AppBarButton x:Name="vmSave" ToolTip="Save (Power On to Resume)" Click="OnSaveCommand" IsTabStop="False" IsCompact="True">
                    <ui:AppBarButton.Icon>
                        <ui:FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE708;"/>
                    </ui:AppBarButton.Icon>
                </ui:AppBarButton>
                <ui:AppBarButton x:Name="vmReboot" Icon="Refresh" ToolTip="Reboot" Click="OnRebootCommand" IsTabStop="False" IsCompact="True"/>
                <ui:AppBarButton x:Name="vmShutdown" ToolTip="Shutdown" Click="OnShutdownCommand" IsTabStop="False" IsCompact="True">
                    <ui:AppBarButton.Icon>
                        <ui:FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xF83D;"/>
                    </ui:AppBarButton.Icon>
                </ui:AppBarButton>
                <ui:AppBarSeparator IsCompact="True"/>
                <ui:AppBarButton x:Name="vmDebug" ToolTip="Launch Debugger" Click="OnDebugCommand" IsTabStop="False" IsCompact="True">
                    <ui:AppBarButton.Icon>
                        <ui:FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xEBE8;"/>
                    </ui:AppBarButton.Icon>
                </ui:AppBarButton>
                <ui:AppBarSeparator IsCompact="True"/>
                <ui:AppBarButton x:Name="hypervSettings" ToolTip="Hyper-V Settings" Click="OnHyperVSettingsCommand" IsTabStop="False" IsCompact="True">
                    <ui:AppBarButton.Icon>
                        <ui:FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE912;"/>
                    </ui:AppBarButton.Icon>
                </ui:AppBarButton>
                <ui:AppBarButton x:Name="networkSettings" ToolTip="Virtual Switch Manager" Click="OnVirtualSwitchManagerCommand" IsTabStop="False" IsCompact="True">
                    <ui:AppBarButton.Icon>
                        <ui:FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xEC27;"/>
                    </ui:AppBarButton.Icon>
                </ui:AppBarButton>
                <ui:AppBarButton x:Name="editVirtualDrive" ToolTip="Edit Disk" Click="OnEditDiskCommand" IsTabStop="False" IsCompact="True">
                    <ui:AppBarButton.Icon>
                        <ui:FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xEDA2;"/>
                    </ui:AppBarButton.Icon>
                </ui:AppBarButton>
                <ui:AppBarButton x:Name="vmSettings" Icon="Setting" ToolTip="VM Settings" Click="OnSettingsCommand" IsTabStop="False" IsCompact="True"/>
                <ui:AppBarSeparator IsCompact="True"/>
                <ui:AppBarButton x:Name="vmAdd" Icon="Add" ToolTip="Create VM" Click="OnAddCommand" IsTabStop="False" IsCompact="True"/>
                <ui:AppBarButton x:Name="vmDelete" Icon="Delete" ToolTip="Delete VM" Click="OnDeleteCommand" IsTabStop="False" IsCompact="True"/>
                <ui:AppBarSeparator IsCompact="True"/>
                <ui:AppBarButton x:Name="rdpConnect" ToolTip="Remote Desktop Connection" Click="OnRdpConnect" IsTabStop="False" IsCompact="True">
                    <ui:AppBarButton.Icon>
                        <ui:FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE8AF;"/>
                    </ui:AppBarButton.Icon>
                </ui:AppBarButton>
            </DockPanel>
        </Grid>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="500"/>
            </Grid.ColumnDefinitions>
            <ListView Grid.Column="0" x:Name="vmList" ItemsSource="{Binding}" util:GridViewSort.AutoSort="True">
                <ListView.Resources>
                    <ContextMenu x:Key="VmContextMenu">
                        <MenuItem Header="Connect" Click="VmContextMenu_Connect" Style="{StaticResource DefaultMenuItemStyle}"/>
                        <MenuItem Header="Settings" Click="OnSettingsCommand" Style="{StaticResource DefaultMenuItemStyle}"/>
                        <Separator/>
                        <MenuItem Click="OnPowerCommand">
                            <MenuItem.Style>
                                <Style TargetType="MenuItem" BasedOn="{StaticResource DefaultMenuItemStyle}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsPoweredOn}" Value="False">
                                            <Setter Property="Header" Value="Power On"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsPoweredOn}" Value="True">
                                            <Setter Property="Header" Value="Power Off"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsPaused}" Value="True">
                                            <Setter Property="Header" Value="Resume"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsSaved}" Value="True">
                                            <Setter Property="Header" Value="Resume"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </MenuItem.Style>
                        </MenuItem>
                        <MenuItem Header="Pause" Click="OnPauseCommand">
                            <MenuItem.Style>
                                <Style TargetType="MenuItem" BasedOn="{StaticResource DefaultMenuItemStyle}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsRunning}" Value="True">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsRunning}" Value="False">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </MenuItem.Style>
                        </MenuItem>
                        <MenuItem Header="Reset" Click="OnResetCommand" IsEnabled="{Binding IsPoweredOn}" Style="{StaticResource DefaultMenuItemStyle}"/>
                        <Separator/>
                        <MenuItem Header="Save" Click="OnSaveCommand" IsEnabled="{Binding IsPoweredOn}" Style="{StaticResource DefaultMenuItemStyle}"/>
                        <MenuItem Header="Reboot" Click="OnRebootCommand" IsEnabled="{Binding IsRunning}" Style="{StaticResource DefaultMenuItemStyle}"/>
                        <MenuItem Header="Shutdown" Click="OnShutdownCommand" IsEnabled="{Binding IsRunning}" Style="{StaticResource DefaultMenuItemStyle}"/>
                        <Separator/>
                        <MenuItem Header="Create Checkpoint" Click="OnCreateCheckpoint" Style="{StaticResource DefaultMenuItemStyle}"/>
                        <MenuItem Header="Revert" Click="OnRevertCheckpoint" IsEnabled="{Binding CanRevert}" Style="{StaticResource DefaultMenuItemStyle}"/>
                    </ContextMenu>
                </ListView.Resources>
                <ListView.View>
                    <GridView>
                        <GridView.ColumnHeaderContainerStyle>
                            <Style TargetType="GridViewColumnHeader" BasedOn="{StaticResource {x:Type GridViewColumnHeader}}">
                                <Setter Property="FontSize" Value="{Binding Source={x:Static root:UserSettings.Instance}, Path=Settings.FontSize, UpdateSourceTrigger=PropertyChanged}" />
                            </Style>
                        </GridView.ColumnHeaderContainerStyle>
                        <GridView.ColumnHeaderTemplate>
                            <DataTemplate>
                                <TextBlock HorizontalAlignment="Left" Text="{Binding}" Margin="5,0,0,0"/>
                            </DataTemplate>
                        </GridView.ColumnHeaderTemplate>
                        <GridViewColumn Header="Name"
                                        DisplayMemberBinding="{Binding Name}"
                                        Width="170"
                                        util:GridViewSort.PropertyName="Name"/>
                        <GridViewColumn Header="Status"
                                        DisplayMemberBinding="{Binding State}"
                                        Width="75"
                                        util:GridViewSort.PropertyName="State"/>
                        <GridViewColumn Header="Cpu Usage (Host)"
                                        DisplayMemberBinding="{Binding Self, Converter={StaticResource VMCpuUsageConverter}}"
                                        Width="148"
                                        util:GridViewSort.PropertyName="ProcessorLoad"/>
                        <GridViewColumn Header="Assigned Memory"
                                        DisplayMemberBinding="{Binding Self, Converter={StaticResource VMMemoryConverter}}"
                                        Width="150"
                                        util:GridViewSort.PropertyName="MemoryUsage"/>
                        <GridViewColumn Header="Uptime"
                                        DisplayMemberBinding="{Binding Self, Converter={StaticResource VMUptimeConverter}}"
                                        Width="83"
                                        util:GridViewSort.PropertyName="UpTime"/>
                        <GridViewColumn Header="Process ID"
                                        DisplayMemberBinding="{Binding ProcessID, Converter={StaticResource VMPidConverter}}"
                                        Width="94"
                                        util:GridViewSort.PropertyName="ProcessID"/>
                        <GridViewColumn Header="Status"
                                        DisplayMemberBinding="{Binding StatusText}"
                                        Width="300"
                                        util:GridViewSort.PropertyName="StatusText"/>
                    </GridView>
                </ListView.View>
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem" BasedOn="{StaticResource DefaultListViewItemStyle}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Source={x:Static root:UserSettings.Instance}, Path=Settings.CompactMode, UpdateSourceTrigger=PropertyChanged}"
                                         Value="True">
                                <Setter Property="Padding" Value="2" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Source={x:Static root:UserSettings.Instance}, Path=Settings.CompactMode, UpdateSourceTrigger=PropertyChanged}"
                                         Value="False">
                                <Setter Property="Padding" Value="10" />
                            </DataTrigger>
                        </Style.Triggers>
                        <Setter Property="FontSize" Value="{Binding Source={x:Static root:UserSettings.Instance}, Path=Settings.FontSize, UpdateSourceTrigger=PropertyChanged}" />
                        <Setter Property="MinHeight" Value="2" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListViewItem">
                                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                        <Grid>
                                            <GridViewRowPresenter x:Name="ContentPresenter" Grid.RowSpan="2" 
                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource ListViewItemBackgroundPointerOver}" />
                                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource ListViewItemForegroundPointerOver}" />
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource ListViewItemBackgroundSelected}" />
                                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource ListViewItemForegroundSelected}" />
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected" Value="True" />
                                                <Condition Property="IsMouseOver" Value="True" />
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource ListViewItemBackgroundSelectedPointerOver}" />
                                        </MultiTrigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter TargetName="Bd" Property="Opacity" Value="{DynamicResource ListViewItemDisabledThemeOpacity}" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <EventSetter Event="MouseDoubleClick" Handler="VmListItem_MouseDoubleClick"/>
                        <Setter Property="ContextMenu" Value="{StaticResource VmContextMenu}"/>
                    </Style>
                </ListView.ItemContainerStyle>
            </ListView>
            <local:VmInfoPanel Grid.Column="1" DataContext="{Binding ElementName=vmList, Path=SelectedItem}"/>
        </Grid>
        <GridSplitter Grid.Row="2" Height="3" HorizontalAlignment="Stretch"/>
        <TabControl Grid.Row="3" TabStripPlacement="Top">
            <TabItem Header="Checkpoints">
                <local:VmCheckpointsPanel DataContext="{Binding ElementName=vmList, Path=SelectedItem}"/>
            </TabItem>
            <TabItem Header="Thumbnails">
                <ScrollViewer Grid.Row="3" Margin="20,0,0,0">
                    <ui:ItemsRepeater x:Name="vmGrid" ItemsSource="{Binding}" ItemTemplate="{StaticResource VmTemplate}">
                        <ui:ItemsRepeater.Layout>
                            <ui:UniformGridLayout/>
                        </ui:ItemsRepeater.Layout>
                    </ui:ItemsRepeater>
                </ScrollViewer>
            </TabItem>
        </TabControl>
    </Grid>
</UserControl>
